Description: >
  Create highly available Squid cluster
Parameters:
  ConfigBucket:
    Type: String
    Description: S3 bucket for configs (SquidConfig, FirehoseAgentConfig)
  SquidConfigKey:
    Type: String
    Description: >
      Key name to zip archive containing squid config to be extracted to
      as /usr/local/squid/etc/. Leave blank for default values.
    AllowedPattern: (^.+\.zip$)|^$
  FirehoseAgentConfigKey:
    Type: String
    Description: >
      Key name to Kinesis firehose agent config. Leave blank to disable log
      collection.
    AllowedPattern: (^.+\.json$)|^$
  HealthCheckCidr:
    Type: String
    Description: >
      CIDR for LB ENI to be whitelisted in HealthCheckSg enabling health checks
    AllowedPattern: ^(\d+\.){3}\d+/\d+$
  ClusterSize:
    Type: Number
    Default: 1
    Description: Number of instances to the cluster
  ClusterInstanceType:
    Type: String
    Default: t2.medium
    Description: Cluster instance type, only m*, r*, c*, and t* instances allowed
    AllowedPattern: ^(m|r|c|t)\d\.(nano|medium|large|\d*xlarge)$
  ClusterRootDiskSize:
    Type: Number
    Default: 12
    MinValue: 8
    MaxValue: 1024
    Description: Size of root disk in GB
  ClusterRoleName:
    Type: String
    Description: Role name for Squid cluster, required if reading config from S3
  ClusterVpc:
    Type: AWS::EC2::VPC::Id
    Description: VPC for Squid and LB
  ClusterSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets for Squid cluster, public recommended
  LbSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets for LB, usually private

Mappings:
  AwsLinuxImageId:
    ap-south-1:
      Ec2Hvm64: ami-4fc58420
    eu-west-2:
      Ec2Hvm64: ami-1a7f6d7e
    eu-west-1:
      Ec2Hvm64: ami-acd005d5
    ap-northeast-2:
      Ec2Hvm64: ami-9bec36f5
    ap-northeast-1:
      Ec2Hvm64: ami-2a69be4c
    sa-east-1:
      Ec2Hvm64: ami-f1344b9d
    ca-central-1:
      Ec2Hvm64: ami-fd55ec99
    ap-southeast-1:
      Ec2Hvm64: ami-0797ea64
    ap-southeast-2:
      Ec2Hvm64: ami-8536d6e7
    eu-central-1:
      Ec2Hvm64: ami-c7ee5ca8
    us-east-1:
      Ec2Hvm64: ami-8c1be5f6
    us-east-2:
      Ec2Hvm64: ami-c5062ba0
    us-west-1:
      Ec2Hvm64: ami-02eada62
    us-west-2:
      Ec2Hvm64: ami-e689729e

Conditions:
  # EmptyLbSubnets: !Equals ["", !Join ["", !Ref LbSubnets] ]
  EmptySquidConfig: !Equals ["", !Ref SquidConfigKey]
  EmptyKfaConfig: !Equals ["", !Ref FirehoseAgentConfigKey]

Resources:
  ClusterAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: "300"
      DesiredCapacity: !Ref ClusterSize
      HealthCheckGracePeriod: "180"
      HealthCheckType: ELB
      LaunchConfigurationName: !Ref ClusterLc
      MaxSize: "10"
      MetricsCollection:
        - Granularity: 1Minute
      MinSize: "0"
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
      TargetGroupARNs:
         - !Ref LoadBalancerTargetGroup
      VPCZoneIdentifier: !Ref ClusterSubnets
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: 1
        PauseTime: PT5M
        SuspendProcesses: [ HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions ]
        WaitOnResourceSignals: true

  ClusterLc:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          buckets:
            - !Ref ConfigBucket
          roleName:
            Fn::Join:
              - ""
              - - "arn:aws:iam::"
                - !Ref AWS::AccountId
                - ":role/"
                - !Ref ClusterRoleName
          buckets: !Ref ConfigBucket

      AWS::CloudFormation::Init:
        configSets:
          squid-kinesis:
            - ConfigSet: squid
            - kinesis-agent
          squid:
            - squid
          default:
            - ConfigSet: squid
        kinesis-agent:
          packages: {yum: {aws-kinesis-agent: []}}
          files:
            /etc/aws-kinesis/agent.json:
              mode: "000640"
              source:
                Fn::Join:
                  - ""
                  - - http://s3.amazonaws.com/
                    - !Ref ConfigBucket
                    - /
                    - !Ref FirehoseAgentConfigKey
              authentication: S3AccessCreds
          services:
            sysvinit:
              aws-kinesis-agent:
                enabled: true
                ensureRunning: true
                files: /etc/aws-kinesis/agent.json
        squid:
          packages: {yum: {squid: []}}
          services:
            sysvinit:
              squid:
                enabled: true
                ensureRunning: true
                files: /etc/squid/squid.conf
          sources:
            /usr/local/squid/etc/:
              Fn::If:
                - EmptySquidConfig
                - !Ref AWS::NoValue
                - Fn::Join:
                    - ""
                    - - http://s3.amazonaws.com/
                      - !Ref ConfigBucket
                      - /
                      - !Ref SquidConfigKey
          commands:
            config:
              env:
                NEW: "/usr/local/squid/etc/squid.conf"
                OLD: "/etc/squid/squid.conf"
              test: "test ! -e \"$NEW\""
              command: "cp -f \"$NEW\" \"$OLD\""
    Properties:
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: !Ref ClusterRootDiskSize
            VolumeType: gp2
      IamInstanceProfile:
        Fn::Join:
          - ""
          - - "arn:aws:iam::"
            - !Ref AWS::AccountId
            - ":instance-profile/"
            - !Ref ClusterRoleName
      ImageId: !FindInMap
        - AwsLinuxImageId
        - !Ref AWS::Region
        - Ec2Hvm64
      InstanceType: !Ref ClusterInstanceType
      SecurityGroups:
        - !Ref ClusterSg
        - !Ref HealthCheckSg
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - yum update -y
              - Fn::Join:
                - " "
                - - /opt/aws/bin/cfn-init --resource ClusterLc
                  - --stack
                  - !Ref AWS::StackName
                  - -c
                  - !If [ EmptyKfaConfig, squid, squid-kinesis ]
                  - --region
                  - !Ref AWS::Region
              - Fn::Join:
                - " "
                - - /opt/aws/bin/cfn-signal --resource ClusterAsg
                  - -e $?
                  - --stack
                  - !Ref AWS::StackName
                  - --region
                  - !Ref AWS::Region

  ClusterSg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Squid cluster access control
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      VpcId: !Ref ClusterVpc

  HealthCheckSg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Squid cluster for NLB health check
      SecurityGroupIngress:
        - CidrIp: !Ref HealthCheckCidr
          FromPort: 3128
          ToPort: 3128
          IpProtocol: TCP
      Tags:
        - Key: Name
          Value: !Join [ -, [ !Ref "AWS::StackName", HealthCheck ]]
      VpcId: !Ref ClusterVpc

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      Subnets: !Ref LbSubnets
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      Type: network

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref LoadBalancerTargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 3128
      Protocol: TCP

  LoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Port: 3128
      Protocol: TCP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      UnhealthyThresholdCount: 2
      VpcId: !Ref ClusterVpc
